definitions:
  contract.AuthUserRequest:
    properties:
      roles:
        items:
          $ref: '#/definitions/entity.Role'
        type: array
      user_id:
        type: integer
    required:
    - roles
    - user_id
    type: object
  contract.AuthUserResponse:
    properties:
      base_response:
        $ref: '#/definitions/contract.BaseResponse'
      user:
        $ref: '#/definitions/entity.User'
    type: object
  contract.BaseResponse:
    properties:
      status_code:
        type: integer
      status_info:
        $ref: '#/definitions/contract.StatusInfo'
    type: object
  contract.ListUsersRequest:
    properties:
      page_no:
        type: integer
      page_size:
        type: integer
    required:
    - page_no
    - page_size
    type: object
  contract.ListUsersResponse:
    properties:
      base_response:
        $ref: '#/definitions/contract.BaseResponse'
      page_info:
        $ref: '#/definitions/entity.Page'
      users:
        items:
          $ref: '#/definitions/entity.User'
        type: array
    type: object
  contract.StatusInfo:
    properties:
      message:
        type: string
      time:
        type: integer
    type: object
  entity.Page:
    properties:
      total_count:
        type: integer
      total_pages:
        type: integer
    type: object
  entity.Role:
    properties:
      role_id:
        type: integer
      role_name:
        type: string
    required:
    - role_id
    - role_name
    type: object
  entity.User:
    properties:
      accepted:
        type: integer
      email:
        type: string
      password:
        type: string
      roles:
        items:
          $ref: '#/definitions/entity.Role'
        type: array
      school:
        type: string
      submitted:
        type: integer
      user_auth_id:
        type: integer
      user_id:
        type: integer
      username:
        type: string
    required:
    - user_auth_id
    type: object
info:
  contact: {}
paths:
  /user/auth:
    post:
      consumes:
      - application/json
      description: 授权用户
      parameters:
      - description: Authentication Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: auth user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/contract.AuthUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract.AuthUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/contract.AuthUserResponse'
      summary: 授权用户
      tags:
      - user
  /user/list:
    get:
      consumes:
      - application/json
      description: 分页用户
      parameters:
      - description: Authentication Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: list user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/contract.ListUsersRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract.ListUsersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/contract.ListUsersResponse'
      summary: 用户列表
      tags:
      - user
swagger: "2.0"
